<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">


    <xacro:macro name="frictionless_wheel_joint_macro" params="prefix x y z">
        <joint name="wheel_${prefix}_joint" type="fixed">
            <parent link="base_link" />
            <child link="wheel_${prefix}_link" />
            <axis xyz="0 0 1" />
            <origin xyz="${x} ${y} ${z}" rpy="0 ${pi/2} ${pi/2}" />
            <dynamics friction="0.0"/>
        </joint>
    </xacro:macro>

    <xacro:macro name="wheel_joint_macro" params="prefix x y z">
        <joint name="wheel_${prefix}_joint" type="continuous">
            <parent link="base_link" />
            <child link="wheel_${prefix}_link" />
            <axis xyz="0 0 1" />
            <origin xyz="${x} ${y} ${z}" rpy="0 ${pi/2} ${pi/2}" />
            <dynamics friction="${infobot_friction}" damping="${infobot_damping}"/>
        </joint>
    </xacro:macro>

    <joint name="base_joint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 0.0" rpy="0 0 0" />
        <dynamics friction="0.01"/>
    </joint>

    <xacro:wheel_joint_macro prefix="left" x="0"  y="${1*wheel_separation/2 }"  z="0" />
    <xacro:wheel_joint_macro prefix="right" x="0" y="${-1*wheel_separation/2 }"  z="0" />
    <xacro:frictionless_wheel_joint_macro prefix="frictionless_back_left"   x="${(base_length/2 - wheel_radius) * 1}"  y="${(base_width/2 - wheel_width) * 1}"   z="0" />
    <xacro:frictionless_wheel_joint_macro prefix="frictionless_back_right"  x="${(base_length/2 - wheel_radius) * 1}"  y="${(base_width/2 - wheel_width) * -1}"  z="0" />
    <xacro:frictionless_wheel_joint_macro prefix="frictionless_front_left"  x="${(base_length/2 - wheel_radius) * -1}" y="${(base_width/2 - wheel_width) * 1}"   z="0" />
    <xacro:frictionless_wheel_joint_macro prefix="frictionless_front_right" x="${(base_length/2 - wheel_radius) * -1}" y="${(base_width/2 - wheel_width) * -1}"  z="0" />


















<!--
ros2 topic pub /effort_controller/commands std_msgs/msg/Float64MultiArray "data:
- -100"
-->

  <link name="slidebar">

    <inertial>
      <mass value="100"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>


  <joint name="slidebar_to_base" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 1.28"/> <!-- IMPORTANT THIS HAS TO BE IN 0,0 TO KEEP THE ROBOT BALANCED-->
    <parent link="base_link"/>
    <child link="slidebar"/>
  </joint>



  <link name="cart">

<xacro:if value="${robot_type == 'GOPAL400'}">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} 0.03"/>
      </geometry>
      <origin xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} 0.03"/>
      </geometry>
    </collision>
</xacro:if>
<xacro:if value="${robot_type == 'FORKLIFT'}">

</xacro:if>

    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>


  <joint name="slider_to_cart" type="prismatic">
    <axis xyz=" 0 0 1"/>
    <origin xyz="0.0 0.0 0.0"/>   <!-- position of the cart-->
    <parent link="slidebar"/>
    <child link="cart"/>
    <limit effort="1000.0" lower="${infobot_slide_range / -2 }" upper="${infobot_slide_range /2 }" velocity="30"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>


  <gazebo reference="cart">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="fork1">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="fork2">
    <material>Gazebo/DarkGrey</material>
  </gazebo>



  <link name="fork1">
    <visual>
      <geometry>
        <box size="${fork_size_x} ${fork_size_y} ${fork_size_z}"/>
      </geometry>
      <origin xyz="${fork_pos_x} ${fork_separation} ${fork_pos_z}"/>
    </visual>
    <collision>
      <geometry>
        <box size="${fork_size_x} ${fork_size_y} ${fork_size_z}"/>
      </geometry>
      <origin xyz="${fork_pos_x} ${fork_separation} ${fork_pos_z}"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <joint name="fork1_to_cart" type="fixed">
    <axis xyz=" 0 0 1"/>
    <origin xyz="0 0 0"/>
    <parent link="cart"/>
    <child link="fork1"/>
  </joint>

  <link name="fork2">
    <visual>
      <geometry>
        <box size="${fork_size_x} ${fork_size_y} ${fork_size_z}"/>
      </geometry>
      <origin xyz="${fork_pos_x} ${-1 * fork_separation} ${fork_pos_z}"/>
    </visual>
    <collision>
      <geometry>
        <box size="${fork_size_x} ${fork_size_y} ${fork_size_z}"/>
      </geometry>
      <origin xyz="${fork_pos_x} ${-1 * fork_separation} ${fork_pos_z}"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>

  <joint name="fork2_to_cart" type="fixed">
    <axis xyz=" 0 0 1"/>
    <origin xyz="0 0 0"/>
    <parent link="cart"/>
    <child link="fork2"/>
  </joint>










  <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="slider_to_cart">
      <command_interface name="effort">
        <param name="min">-1000</param>
        <param name="max">1000</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
  </ros2_control>

  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <parameters>$(find infobot_agent)/config/controller_effort.yaml</parameters>
    </plugin>
  </gazebo>



</robot>